import numpy as np
import pandas as pd
import statsmodels.api as smean
import matplotlib.pyplot as plt
import yfinance as yf
from datetime import datetime
# Simulating data (replace this with your actual VIX data)

def fetch_data_list(ticker, start_date, end_date):
    data = yf.download(ticker, start=start_date, end=end_date)
    prices = data['Close'].tolist()
    return prices

start_date = datetime(2019,2,25)
end_date = datetime(2023,11,17)

vix_data = fetch_data_list('^VIX', start_date, end_date)

df = pd.DataFrame({'VIX': vix_data})

# Define the Markov regime conditional mean switching model
class MRCMSModel(sm.tsa.MarkovRegression):
    def __init__(self, endog, k_regimes):
        super(MRCMSModel, self).__init__(endog, k_regimes, order=1, trend='c')

# Fit the Markov regime conditional mean switching model
mrcms_model = MRCMSModel(df['VIX'], k_regimes=3)
mrcms_results = mrcms_model.fit()

# Print the model summary
print(mrcms_results.summary())

# Plot actual versus predicted values
plt.figure(figsize=(10, 6))
plt.plot(df['VIX'], label='Actual VIX')
plt.plot(mrcms_results.predict(), label='Predicted VIX Mean', linestyle='--')
plt.title('Actual vs Predicted VIX Mean with Regime Switching')
plt.xlabel('Time')
plt.ylabel('VIX')
plt.legend()
plt.show()
